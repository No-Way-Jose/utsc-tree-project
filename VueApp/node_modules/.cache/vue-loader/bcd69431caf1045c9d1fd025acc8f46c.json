{"remainingRequest":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/src/components/TreeViewGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/src/components/TreeViewGenerator.vue","mtime":1572549420124},{"path":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/riceboy/RiceBoy Documents/UTSC Course Tree/VueApp/utsc-tree/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEltcG9ydCBheGlvcyBzaW5jZSB1c2luZyBBUEkgYW5kIFRyZWVDaGFydCBzbyB3ZSBjYW4gZ2VuZXJhdGUgdGhlIHRyZWVzCmltcG9ydCBUcmVlQ2hhcnQgZnJvbSAndnVlLXRyZWUtY2hhcnQnCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlZVZpZXcnLAogIGNvbXBvbmVudHM6IHsKICAgIFRyZWVDaGFydAogIH0sCiAgLy8gUHJvcCBzbyB3ZSBjYW4gZ2V0IHRoZSBjb3Vyc2UgZnJvbSBTZWFyY2hEcm9wQmFyCiAgcHJvcHM6IHsKICAgIGluZm86IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IHt9LAogICAgICBleHRyYWluZm86ICcnCiAgICB9CiAgfSwKICAvLyBXYXRjaCB3aGVuIHRoZSBpbmZvIGdldHMgY2hhbmdlZCBhbmQgc2V0IHZhciB0byByaWdodCBjb3Vyc2UKICB3YXRjaDogewogICAgaW5mbzogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmV4dHJhaW5mbyA9IHRoaXMuaW5mbwogICAgfQogIH0sCiAgLy8gUHJvYmFibHkgZ29pbmcgdG8gaGF2ZSB0byBjaGFuZ2UgdGhpcyB0byBhIG1ldGhvZCBvbmNlIGZ1bGx5IGltcGxlbWVudGVkCiAgY3JlYXRlZCAoKSB7CiAgICBheGlvcy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9EYXRhUmV0cmlldmFsL0NTQ0EwOEgzJykKICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIC8vIFNpbmNlIFRyZWVjaGFydCBhY2NlcHRzIGpzb24ganVzdCBhc3NpZ24gaXQgc3RyYWlnaHQKICAgICAgICB0aGlzLmRhdGEgPSAocmVzcG9uc2UuZGF0YSkKICAgICAgfSkKICAgICAgLy8gQ2F0Y2ggYW55IGVycm9ycwogICAgICAuY2F0Y2goZSA9PiB7CiAgICAgICAgdGhpcy5lcnJvcnMucHVzaChlKQogICAgICB9KQogIH0KfQo="},{"version":3,"sources":["TreeViewGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeViewGenerator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n  <!-- Container which will hold the tree structure -->\n  <v-container>\n\n    <v-row>\n      <!-- Left column to display the tree -->\n      <v-col cols=\"9\">\n        <h3>Tree View Area</h3>\n        <!-- Center the diagram -->\n        <v-layout justify-center>\n          <TreeChart :json=\"data\" />\n        </v-layout>\n      </v-col>\n\n      <v-divider vertical></v-divider>\n\n      <!-- Right column to display extra information for the courses like prof permission or ORs -->\n      <v-col cols=\"2\">\n        <h3>Extra Information </h3>\n        {{ extrainfo }}\n      </v-col>\n    </v-row>\n\n  </v-container>\n\n</template>\n\n<script>\n// Import axios since using API and TreeChart so we can generate the trees\nimport TreeChart from 'vue-tree-chart'\nimport axios from 'axios'\n\nexport default {\n  name: 'TreeView',\n  components: {\n    TreeChart\n  },\n  // Prop so we can get the course from SearchDropBar\n  props: {\n    info: {\n      type: String\n    }\n  },\n  data () {\n    return {\n      data: {},\n      extrainfo: ''\n    }\n  },\n  // Watch when the info gets changed and set var to right course\n  watch: {\n    info: function () {\n      this.extrainfo = this.info\n    }\n  },\n  // Probably going to have to change this to a method once fully implemented\n  created () {\n    axios.get('http://127.0.0.1:5000/DataRetrieval/CSCA08H3')\n      .then(response => {\n        // Since Treechart accepts json just assign it straight\n        this.data = (response.data)\n      })\n      // Catch any errors\n      .catch(e => {\n        this.errors.push(e)\n      })\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}